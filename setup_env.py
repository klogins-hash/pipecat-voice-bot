#!/usr/bin/env python3
"""
Environment Setup Helper for Pipecat Quickstart

This script helps you set up your API keys interactively.
Run with: python setup_env.py
"""

import os
from pathlib import Path


def setup_environment():
    """Interactive setup for environment variables."""
    print("üîß Pipecat Quickstart Environment Setup")
    print("=" * 50)
    print()
    
    env_file = Path(".env")
    
    # Read existing .env if it exists
    existing_vars = {}
    if env_file.exists():
        with open(env_file, 'r') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    existing_vars[key] = value
    
    # API key configurations
    api_configs = [
        {
            'key': 'CARTESIA_API_KEY',
            'name': 'Cartesia (Speech-to-Text & Text-to-Speech)',
            'signup_url': 'https://play.cartesia.ai/sign-up',
            'description': 'Handles both speech recognition and voice synthesis'
        },
        {
            'key': 'OPENROUTER_API_KEY',
            'name': 'OpenRouter (for Cohere Command R)',
            'signup_url': 'https://openrouter.ai/keys',
            'description': 'Access to Cohere Command R and other LLMs via OpenRouter'
        },
        {
            'key': 'DAILY_API_KEY',
            'name': 'Daily (WebRTC - Optional)',
            'signup_url': 'https://dashboard.daily.co/signup',
            'description': 'Optional: For Daily WebRTC transport'
        }
    ]
    
    new_vars = {}
    
    for config in api_configs:
        key = config['key']
        name = config['name']
        signup_url = config['signup_url']
        description = config['description']
        
        print(f"üìã {name}")
        print(f"   {description}")
        print(f"   Sign up: {signup_url}")
        
        current_value = existing_vars.get(key, '')
        if current_value and current_value != f'your_{key.lower()}':
            print(f"   Current: {current_value[:10]}..." if len(current_value) > 10 else f"   Current: {current_value}")
            use_existing = input(f"   Keep existing value? (y/n): ").lower().strip()
            if use_existing in ['y', 'yes', '']:
                new_vars[key] = current_value
                print("   ‚úÖ Keeping existing value")
                print()
                continue
        
        while True:
            if key == 'DAILY_API_KEY':
                value = input(f"   Enter {name} API key (optional, press Enter to skip): ").strip()
                if not value:
                    print("   ‚è≠Ô∏è  Skipping optional Daily API key")
                    break
            else:
                value = input(f"   Enter {name} API key: ").strip()
            
            if value:
                new_vars[key] = value
                print("   ‚úÖ API key saved")
                break
            elif key != 'DAILY_API_KEY':
                print("   ‚ùå API key is required. Please enter a valid key.")
        print()
    
    # Write to .env file
    with open(env_file, 'w') as f:
        f.write("# Pipecat Quickstart API Keys\n")
        f.write("# Generated by setup_env.py\n\n")
        
        f.write("# Cartesia API Key (for both TTS and STT)\n")
        if 'CARTESIA_API_KEY' in new_vars:
            f.write(f"CARTESIA_API_KEY={new_vars['CARTESIA_API_KEY']}\n")
        else:
            f.write("CARTESIA_API_KEY=your_cartesia_api_key\n")
        
        f.write("\n# OpenRouter API Key (for Cohere Command R LLM)\n")
        if 'OPENROUTER_API_KEY' in new_vars:
            f.write(f"OPENROUTER_API_KEY={new_vars['OPENROUTER_API_KEY']}\n")
        else:
            f.write("OPENROUTER_API_KEY=your_openrouter_api_key\n")
        
        f.write("\n# Optional: Connect via Daily WebRTC locally\n")
        if 'DAILY_API_KEY' in new_vars:
            f.write(f"DAILY_API_KEY={new_vars['DAILY_API_KEY']}\n")
        else:
            f.write("# DAILY_API_KEY=your_daily_api_key\n")
        
        f.write("\n# Legacy keys (not needed for new configuration)\n")
        f.write("# DEEPGRAM_API_KEY=your_deepgram_api_key\n")
        f.write("# OPENAI_API_KEY=your_openai_api_key\n")
    
    print("üéâ Environment setup complete!")
    print(f"üìÅ API keys saved to: {env_file.absolute()}")
    print()
    print("Next steps:")
    print("1. Run your Cartesia + Cohere bot: uv run bot_cartesia_cohere.py")
    print("2. Open http://localhost:7860 in your browser")
    print("3. Click 'Connect' to start talking!")
    print()
    print("Available bots:")
    print("- bot.py (original Deepgram + OpenAI + Cartesia)")
    print("- bot_cartesia_cohere.py (Cartesia STT/TTS + Cohere Command R)")
    print("- bot_custom.py (customizable template)")
    print()
    print("For customization, check out:")
    print("- DEVELOPMENT.md (development guide)")


if __name__ == "__main__":
    setup_environment()
